{"version":3,"sources":["Item.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["ItemYesterday","_ref2","yesterday","diff","react_default","a","createElement","className","ItemPrice","_ref3","price","ItemDiffPercent","_ref4","current","Number","replace","tempVal","toFixed","ItemRemove","_ref5","onRemove","id","onClick","e","ItemLink","_ref6","title","href","target","rel","Item","_ref","Item_ItemLink","Item_ItemRemove","Item_ItemYesterday","Item_ItemPrice","Item_ItemDiffPercent","Form","value1","value2","onChange","onSubmit","onKeyPress","value","name","placeholder","type","userStockList","defaultList","index","App","state","infos","saveListToLocalstorage","localStorage","setItem","JSON","stringify","loadListFromLocalstorage","getItem","parse","forEach","sl","_this","_getInfos","_callApi","fetch","then","response","text","catch","err","console","log","_callee","tmpInfo","fulltext","_tmpInfo","sub","part","today","numberDiff","regenerator_default","wrap","_context","prev","next","sent","indexOf","substring","split","concat","apply","Object","toConsumableArray","setState","handleRemove","stop","this","handleChange","defineProperty","handleKeyPress","key","handleSubmit","preventDefault","stockItem","tmpList","filter","fullItemList","itemList","_renderInfos","map","info","assertThisInitialized","src_Item_0","_renderForm","_assertThisInitialize2","src_components_Form","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa984c50.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Item.css';\r\n\r\nconst Item = ({title, price, yesterday, diff, id, onRemove}) => {\r\n  return (\r\n    <div className=\"Item\">\r\n      <div className = \"Item_Columns\">\r\n        <div className = \"Item_Title\">\r\n          <ItemLink title={title} id={id}/>\r\n          <ItemRemove onRemove={onRemove} id={id}/>\r\n        </div>\r\n        <div className=\"Item_Content\">\r\n          <ItemYesterday yesterday={yesterday} diff={diff}/>\r\n          <ItemPrice price={price}/>\r\n          <ItemDiffPercent yesterday={yesterday} current={price}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  price: PropTypes.string.isRequired,\r\n  yesterday: PropTypes.string.isRequired,\r\n  diff: PropTypes.number.isRequired\r\n}\r\n\r\nconst ItemYesterday = ({yesterday, diff}) => {\r\n  return (\r\n    <span className=\"Item_Yesterday\">{yesterday} {diff}</span>\r\n  )\r\n}\r\nItemYesterday.propTypes = {\r\n  yesterday: PropTypes.string.isRequired,\r\n  diff: PropTypes.number.isRequired\r\n}\r\n\r\nconst ItemPrice = ({price}) => {\r\n  return (\r\n    <span className=\"Item_Price\">{price} </span>\r\n  )\r\n}\r\nItemPrice.propTypes = {\r\n  price: PropTypes.string.isRequired\r\n}\r\n\r\nconst ItemDiffPercent = ({yesterday, current}) => {\r\n  yesterday = Number(yesterday.replace(',',''));\r\n  current = Number(current.replace(',',''));\r\n  var tempVal = (current - yesterday)/yesterday*100;\r\n  return (\r\n    <span className=\"Item_DiffPercent\">{tempVal.toFixed(2)}%</span>\r\n  )\r\n}\r\nItemDiffPercent.propTypes = {\r\n  yesterday: PropTypes.string.isRequired,\r\n  current: PropTypes.string.isRequired\r\n}\r\n\r\nconst ItemRemove = ({onRemove, id}) => {\r\n  return (\r\n    <div className=\"Item_Remove\" onClick={(e) => {\r\n      //e.stopPropagation();\r\n      onRemove(id)}\r\n    }>&times;</div>\r\n  )\r\n}\r\nItemRemove.propTypes = {\r\n  onRemove: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nconst ItemLink = ({title, id}) => {\r\n  return (\r\n    <h1><a href={'https://finance.naver.com/item/main.nhn?code='+id} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a></h1>\r\n  )\r\n}\r\nItemLink.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = ({value1, value2, onChange, onSubmit, onKeyPress}) => {\r\n    return (\r\n        <div className=\"form\">\r\n            <input value={value1} onChange={onChange} onKeyPress={onKeyPress} name=\"title\" placeholder=\"이름\"/>\r\n            <input value={value2} onChange={onChange} onKeyPress={onKeyPress} name=\"index\" placeholder=\"고유번호\" type=\"number\"/>\r\n            <div className=\"create-button\" onClick={onSubmit}>\r\n                추가\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\nimport Item from \"./Item\";\nimport Form from './components/Form';\n\nlet userStockList = [];\nconst defaultList = [\n  {\n    title: \"YG\",\n    index: \"122870\"\n  },\n  {\n    title: \"JYP\",\n    index: \"035900\"\n  },\n  {\n    title: \"S&C엔진\",\n    index: \"900080\"\n  },\n  {\n    title: \"LGE\",\n    index: \"066570\"\n  },\n  {\n    title: \"깨끗한 나라\",\n    index: \"004540\"\n  },\n  {\n    title: \"지트리비앤티\",\n    index: \"115450\"\n  },\n  {\n    title: \"코오롱티슈진\",\n    index: \"950160\"\n  },\n  {\n    title: \"파루\",\n    index: \"043200\"\n  },\n  {\n    title: \"중앙백신\",\n    index: \"072020\"\n  }\n]\n\nclass App extends Component {\n  state = {\n    infos: [\n    ],\n    title:'',\n    index:'',\n  }\n\n  _setDefaultList(){\n    // Set Default Setting\n    userStockList = defaultList;\n    this.saveListToLocalstorage();\n  }\n\n  componentDidMount(){\n    this.loadListFromLocalstorage();\n    /*\n    stockList.forEach(sl => {\n      //console.log(sl.index)\n      this._getInfos(sl);\n    })*/\n  }\n\n  saveListToLocalstorage = () => {\n    localStorage.setItem('tocklist', JSON.stringify(userStockList));\n  }\n\n  loadListFromLocalstorage = () => {\n    if (localStorage.getItem('tocklist')) {\n      userStockList = JSON.parse(localStorage.getItem('tocklist'))\n    } else {\n      userStockList = []\n    }\n    userStockList.forEach(sl => {\n      this._getInfos(sl);\n    })\n  }\n\n  _callApi = (index) => {\n    return fetch(\"https://finance.naver.com/item/main.nhn?code=\"+index)\n    .then(response => response.text())\n    .catch(err => console.log(err));\n  }\n\n  _getInfos = async (sl) => {\n    var tmpInfo = [];  \n    var fulltext = await this._callApi(sl.index);\n    if(fulltext){\n      if(fulltext.indexOf('<dl class=\"blind\">') !== -1) {\n        var sub = fulltext.substring(fulltext.indexOf('<dl class=\"blind\">'), fulltext.indexOf('</dl>'));\n        var part = sub.split('<dd>');\n        var today = part[4].split(' ');\n        var yesterday = part[5].split(' ')[1].replace(\"</dd>\", \"\");\n        var numberDiff = Number(today[1].replace(\",\", \"\")-Number(yesterday.replace(\",\", \"\")));\n      \n        const {infos} = this.state;\n        tmpInfo = tmpInfo.concat({\n          title: sl.title,\n          price: today[1],\n          diff: numberDiff,\n          yesterday: yesterday,\n          id: sl.index\n        },...infos)\n        this.setState({\n          infos: tmpInfo\n        })\n      }else{\n        this.handleRemove(sl.index);\n      }\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleKeyPress = (e) => {\n    // 눌려진 키가 Enter 면 handleSubmit 호출\n    if(e.key === 'Enter') {\n      this.handleSubmit();\n    }\n  }\n\n  handleSubmit = (e) => {\n    // 페이지 리로딩 방지\n    e.preventDefault();\n    // 상태 초기화\n    this.setState({\n      title: '',\n      index: ''\n    })\n    if(this.state.title !== \"\" && this.state.index !== \"\"){\n      const stockItem = {\n        title: this.state.title,\n        index: this.state.index\n      }\n      // List에 추가\n      this._getInfos(stockItem);\n      // Local Storage에 저장\n      userStockList = userStockList.concat(stockItem);\n      this.saveListToLocalstorage();\n    }\n  }\n\n  handleRemove = (id) => {\n    // 화면 List에서 지우기\n    const tmpList = this.state.infos.filter(fullItemList => fullItemList.id !== id);\n    this.setState({\n      infos: tmpList\n    });\n\n    // Loca Storage에 저장.\n    userStockList = userStockList.filter(itemList => itemList.index !== id);\n    this.saveListToLocalstorage();\n  }\n\n  _renderInfos = () => {\n    const infos = this.state.infos.map(info => {\n      const {\n        handleRemove\n      } = this;\n\n      return <Item \n        title={info.title} \n        price={info.price}\n        yesterday={info.yesterday}\n        diff={info.diff}\n        id={info.id}\n        key={info.id}\n        onRemove={handleRemove}\n      />\n    })\n    return infos;\n  }\n\n  _renderForm = () => {\n    const {\n      handleChange,\n      handleSubmit,\n      handleKeyPress\n    } = this;\n\n    return <Form\n      value1={this.state.title}\n      value2={this.state.index}\n      onKeyPress={handleKeyPress}\n      onChange={handleChange}\n      onSubmit={handleSubmit}\n    />\n  }\n\n  render() {\n    return (\n      <div className={this.state.infos ? \"App\" : \"App-loading\"}>\n        {this.state.infos ? this._renderInfos() : \"Loading\"}\n        {this._renderForm()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}